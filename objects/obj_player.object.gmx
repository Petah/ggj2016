<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship_4_green</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>obj_human</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

thrust_sound = audio_play_sound(snd_thrust, 0, true);
audio_sound_gain(thrust_sound, 0, 0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!dead) {
    view_xview[0] = x - (view_wview[0] / 2) + lengthdir_x(speed * 5, direction);
    view_yview[0] = y - (view_hview[0] / 2) + lengthdir_y(speed * 5, direction);
} else {
    // view_xview[0] = -2000000;
    // view_yview[0] = -2000000;
}

audio_listener_position(view_xview[0], view_yview[0], 0);

obj_hud.ship_id = id;
obj_hud.ship_hp = ship_hp;
obj_hud.ship_max_hp = ship_max_hp;
obj_hud.ship_boost = ship_boost;
obj_hud.ship_max_boost = ship_max_boost;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dead) {
    if (keyboard_check(vk_up)) {
        process_command(CMD_ACCELERATE, self.id);
    }
    
    if (keyboard_check(vk_down)) {
        process_command(CMD_BREAK, self.id);
    }
    
    if (keyboard_check(vk_left)) {
        process_command(CMD_TURN_LEFT, self.id);
    }
    
    if (keyboard_check(vk_right)) {
        process_command(CMD_TURN_RIGHT, self.id);
    }
    
    if (keyboard_check_pressed(vk_space)) {
        process_command(CMD_FIRE_1, self.id);
    }
    
    if (keyboard_check_pressed(vk_control)) {
        process_command(CMD_FIRE_2, self.id);
    }
    
    if (keyboard_check_pressed(vk_shift)) {
        process_command(CMD_BOOST_ON, self.id);
    }
    
    if (keyboard_check_released(vk_shift)) {
        process_command(CMD_BOOST_OFF, self.id);
    }
    // log("SD " + string(rotation) + " " + string(speed) + " " + string(direction) + " " + string(x) + "," + string(y));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

with (obj_asteroid) {
    var distance = get_distance_torus(other.x, other.y, x, y, room_width, room_height);
    if (distance &lt; 2000) {
        var angle = point_direction_wrap(other.x, other.y, x, y);
        draw_sprite_ext(spr_pointer_grey, 0, other.x + lengthdir_x(100, angle), other.y + lengthdir_y(100, angle), 1, 1, angle, c_white, 1 - (distance / 2000));
    }
}

with (obj_network_player) {
    if (!dead) {
        var angle = point_direction_wrap(other.x, other.y, x, y);
        draw_sprite_ext(spr_pointer_red, 0, other.x + lengthdir_x(100, angle), other.y + lengthdir_y(100, angle), 1, 1, angle, c_white, 1);
    }
}

with (obj_bot) {
    if (!dead) {
        var angle = point_direction_wrap(other.x, other.y, x, y);
        draw_sprite_ext(spr_pointer_red, 0, other.x + lengthdir_x(100, angle), other.y + lengthdir_y(100, angle), 1, 1, angle, c_white, 1);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_gain(thrust_sound, 0.75, 50);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>broadcast_particle_burst(global.mine_ship_bits, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_gain(thrust_sound, 0, 300);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
